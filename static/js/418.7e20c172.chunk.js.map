{"version":3,"file":"static/js/418.7e20c172.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login3.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// ============================|| FIREBASE - LOGIN ||============================ //\n\nconst FirebaseLogin = ({ ...others }) => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const [checked, setChecked] = useState(true);\n\n    const googleHandler = async () => {\n        console.error('Login');\n    };\n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"outlined\"\n                            sx={{\n                                color: 'grey.700',\n                                backgroundColor: theme.palette.grey[50],\n                                borderColor: theme.palette.grey[100]\n                            }}\n                        >\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\n                            </Box>\n                            Sign in with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n\n                        <Button\n                            variant=\"outlined\"\n                            sx={{\n                                cursor: 'unset',\n                                m: 2,\n                                py: 0.5,\n                                px: 7,\n                                borderColor: `${theme.palette.grey[100]} !important`,\n                                color: `${theme.palette.grey[900]}!important`,\n                                fontWeight: 500,\n                                borderRadius: `${customization.borderRadius}px`\n                            }}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign in\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default FirebaseLogin;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthLogin from '../auth-forms/AuthLogin';\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\n// assets\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthLogin />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/pages/register/register3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don&apos;t have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;\n"],"names":["scripted","useRef","useEffect","current","direction","justifyContent","variant","component","Link","href","target","underline","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundColor","palette","primary","light","minHeight","others","useTheme","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","checked","setChecked","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Grid","container","spacing","item","AnimateButton","Button","disableElevation","fullWidth","onClick","async","console","error","size","color","grey","borderColor","Box","mr","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","Stack","FormControlLabel","control","Checkbox","textDecoration","mt","AuthCardWrapper","to","Logo","secondary","main","gutterBottom","fontSize","textAlign","AuthLogin","AuthFooter"],"sourceRoot":""}